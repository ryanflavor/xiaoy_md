repos:
  # Architecture validation
  - repo: local
    hooks:
      - id: architecture-check
        name: Hexagonal Architecture Validation
        entry: python scripts/check_architecture.py
        language: python
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Code formatting with Black
  - repo: https://github.com/psf/black
    rev: 24.10.0  # Updated for Python 3.13 support
    hooks:
      - id: black
        language_version: python3.13
        args: ['--line-length=88', '--target-version=py313']

  # Import sorting with isort
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '88']

  # Linting with Ruff (excluding format since we use Black)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.4
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix']
      # ruff-format removed - using Black for formatting

  # Type checking with Mypy
  - repo: local
    hooks:
      - id: mypy-strict
        name: Type checking with Mypy
        entry: uv run mypy
        args: ['--config-file=pyproject.toml', '.']
        language: system
        types: [python]
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        args: ['-r', 'src']
        files: '^src/.*\.py$'
        exclude: '^(tests|references|docs|scripts)/.*'

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '^(\.secrets\.baseline|.*\.lock|\.bmad-core/.*|references/.*)$'

  # YAML validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
        args: ['--unsafe']
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-toml

  # Docstring checks
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        exclude: '^(tests/|scripts/)'

  # Custom project-specific checks
  - repo: local
    hooks:
      - id: no-print-statements
        name: Check for print statements
        entry: '\bprint\('
        language: pygrep
        types: [python]
        exclude: '^(scripts/|tests/)'

      - id: no-todos
        name: Check for TODO comments
        entry: '(TODO|FIXME|XXX)'
        language: pygrep
        types: [python]
        exclude: '^(docs/|\.github/)'

      - id: validate-pyproject
        name: Validate pyproject.toml
        entry: uv run python -c "import tomli; tomli.load(open('pyproject.toml', 'rb'))"
        language: system
        files: 'pyproject.toml'
        pass_filenames: false

# Configuration
default_stages: [pre-commit]
fail_fast: true  # Stop on first failure to ensure quality
